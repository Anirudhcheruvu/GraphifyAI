{"version":3,"file":"clientScript.js","mappings":";;;;;;;;;;;;;;;;UAAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;+CCLA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,UAAA,cAAAa,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,OAAA,CAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,2BAAA,eAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,QAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,eAAAX,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,uCAAA1D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAgE,UAAA,IAAApD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA+D,IAAA,GAAAjE,CAAA,CAAAkE,OAAA,eAAAhE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,sCAAA7D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAgC,aAAAlE,CAAA,QAAAD,CAAA,KAAAoE,MAAA,EAAAnE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAqE,QAAA,GAAApE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAsE,UAAA,GAAArE,CAAA,KAAAD,CAAA,CAAAuE,QAAA,GAAAtE,CAAA,WAAAuE,UAAA,CAAAC,IAAA,CAAAzE,CAAA,cAAA0E,cAAAzE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA0E,UAAA,QAAA3E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA0E,UAAA,GAAA3E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAuE,UAAA,MAAAJ,MAAA,aAAAnE,CAAA,CAAA4C,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAiE,IAAA,SAAAjE,CAAA,OAAA6E,KAAA,CAAA7E,CAAA,CAAA8E,MAAA,SAAAvE,CAAA,OAAAG,CAAA,YAAAuD,KAAA,aAAA1D,CAAA,GAAAP,CAAA,CAAA8E,MAAA,OAAAzE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA0D,IAAA,CAAAxD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA0D,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAvD,CAAA,CAAAuD,IAAA,GAAAvD,CAAA,gBAAAqD,SAAA,CAAAd,OAAA,CAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAgF,mBAAA,aAAA/E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAgF,WAAA,WAAAjF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA+E,WAAA,IAAA/E,CAAA,CAAAkF,IAAA,OAAAlF,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,WAAAE,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAnF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAoF,SAAA,GAAAhD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAsF,KAAA,aAAArF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAA5E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAgF,mBAAA,CAAA9E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAqD,IAAA,GAAAb,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAqD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAyF,IAAA,aAAAxF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAuE,IAAA,CAAApE,CAAA,UAAAH,CAAA,CAAAwF,OAAA,aAAAzB,KAAA,WAAA/D,CAAA,CAAA4E,MAAA,SAAA7E,CAAA,GAAAC,CAAA,CAAAyF,GAAA,QAAA1F,CAAA,IAAAD,CAAA,SAAAiE,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAAjE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA6E,WAAA,EAAAxD,OAAA,EAAAmD,KAAA,WAAAA,MAAA5E,CAAA,aAAA4F,IAAA,WAAA3B,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAuE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAA1E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA2F,MAAA,OAAAxF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA2E,KAAA,EAAA3E,CAAA,CAAA4F,KAAA,cAAA5F,CAAA,IAAAD,CAAA,MAAA8F,IAAA,WAAAA,KAAA,SAAAxC,IAAA,WAAAtD,CAAA,QAAAuE,UAAA,IAAAG,UAAA,kBAAA1E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAmE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAA+F,OAAA5F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA+D,IAAA,GAAA5D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA8D,UAAA,CAAAjE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAiE,UAAA,iBAAAjE,CAAA,CAAA0D,MAAA,SAAA6B,MAAA,aAAAvF,CAAA,CAAA0D,MAAA,SAAAwB,IAAA,QAAA9E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA4E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,gBAAAuB,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,cAAAxD,CAAA,aAAA8E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,qBAAArD,CAAA,QAAAsC,KAAA,qDAAAsC,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,YAAAR,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAsE,UAAA,CAAAM,MAAA,MAAA5E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAiE,UAAA,CAAAtE,CAAA,OAAAK,CAAA,CAAA6D,MAAA,SAAAwB,IAAA,IAAAvF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAqF,IAAA,GAAArF,CAAA,CAAA+D,UAAA,QAAA5D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA0D,MAAA,IAAApE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA4D,UAAA,KAAA5D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAiE,UAAA,cAAA/D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAS,IAAA,GAAAvD,CAAA,CAAA4D,UAAA,EAAAnC,CAAA,SAAA+D,QAAA,CAAAtF,CAAA,MAAAsF,QAAA,WAAAA,SAAAjG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAqC,IAAA,GAAAhE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAoE,IAAA,QAAAnE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAS,IAAA,yBAAAhE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAiE,IAAA,GAAAjE,CAAA,GAAAmC,CAAA,KAAAgE,MAAA,WAAAA,OAAAlG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAoE,UAAA,KAAArE,CAAA,cAAAiG,QAAA,CAAAhG,CAAA,CAAAyE,UAAA,EAAAzE,CAAA,CAAAqE,QAAA,GAAAG,aAAA,CAAAxE,CAAA,GAAAiC,CAAA,yBAAAiE,OAAAnG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAkE,MAAA,KAAAnE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAyE,UAAA,kBAAAtE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA6C,aAAA,CAAAxE,CAAA,YAAAK,CAAA,YAAA+C,KAAA,8BAAA+C,aAAA,WAAAA,cAAArG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAgE,UAAA,EAAA9D,CAAA,EAAAgE,OAAA,EAAA7D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AAAA,SAAAsG,mBAAApG,CAAA,WAAAqG,kBAAA,CAAArG,CAAA,KAAAsG,gBAAA,CAAAtG,CAAA,KAAAuG,2BAAA,CAAAvG,CAAA,KAAAwG,kBAAA;AAAA,SAAAA,mBAAA,cAAA3C,SAAA;AAAA,SAAA0C,4BAAAvG,CAAA,EAAAU,CAAA,QAAAV,CAAA,2BAAAA,CAAA,SAAAyG,iBAAA,CAAAzG,CAAA,EAAAU,CAAA,OAAAX,CAAA,MAAA2G,QAAA,CAAA9E,IAAA,CAAA5B,CAAA,EAAA4F,KAAA,6BAAA7F,CAAA,IAAAC,CAAA,CAAA+E,WAAA,KAAAhF,CAAA,GAAAC,CAAA,CAAA+E,WAAA,CAAAC,IAAA,aAAAjF,CAAA,cAAAA,CAAA,GAAA4G,KAAA,CAAAC,IAAA,CAAA5G,CAAA,oBAAAD,CAAA,+CAAA8G,IAAA,CAAA9G,CAAA,IAAA0G,iBAAA,CAAAzG,CAAA,EAAAU,CAAA;AAAA,SAAA4F,iBAAAtG,CAAA,8BAAAS,MAAA,YAAAT,CAAA,CAAAS,MAAA,CAAAE,QAAA,aAAAX,CAAA,uBAAA2G,KAAA,CAAAC,IAAA,CAAA5G,CAAA;AAAA,SAAAqG,mBAAArG,CAAA,QAAA2G,KAAA,CAAAG,OAAA,CAAA9G,CAAA,UAAAyG,iBAAA,CAAAzG,CAAA;AAAA,SAAAyG,kBAAAzG,CAAA,EAAAU,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAV,CAAA,CAAA4E,MAAA,MAAAlE,CAAA,GAAAV,CAAA,CAAA4E,MAAA,YAAA9E,CAAA,MAAAK,CAAA,GAAAwG,KAAA,CAAAjG,CAAA,GAAAZ,CAAA,GAAAY,CAAA,EAAAZ,CAAA,IAAAK,CAAA,CAAAL,CAAA,IAAAE,CAAA,CAAAF,CAAA,UAAAK,CAAA;AAAA,SAAA4G,mBAAA5G,CAAA,EAAAJ,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAK,CAAA,EAAAK,CAAA,EAAAE,CAAA,cAAAJ,CAAA,GAAAL,CAAA,CAAAO,CAAA,EAAAE,CAAA,GAAAE,CAAA,GAAAN,CAAA,CAAAD,KAAA,WAAAJ,CAAA,gBAAAL,CAAA,CAAAK,CAAA,KAAAK,CAAA,CAAA6C,IAAA,GAAAtD,CAAA,CAAAe,CAAA,IAAAwE,OAAA,CAAAtC,OAAA,CAAAlC,CAAA,EAAAoC,IAAA,CAAAlD,CAAA,EAAAK,CAAA;AAAA,SAAA2G,kBAAA7G,CAAA,6BAAAJ,CAAA,SAAAD,CAAA,GAAAmH,SAAA,aAAA3B,OAAA,WAAAtF,CAAA,EAAAK,CAAA,QAAAK,CAAA,GAAAP,CAAA,CAAA+G,KAAA,CAAAnH,CAAA,EAAAD,CAAA,YAAAqH,MAAAhH,CAAA,IAAA4G,kBAAA,CAAArG,CAAA,EAAAV,CAAA,EAAAK,CAAA,EAAA8G,KAAA,EAAAC,MAAA,UAAAjH,CAAA,cAAAiH,OAAAjH,CAAA,IAAA4G,kBAAA,CAAArG,CAAA,EAAAV,CAAA,EAAAK,CAAA,EAAA8G,KAAA,EAAAC,MAAA,WAAAjH,CAAA,KAAAgH,KAAA;AAAA,SAAAE,kBAAAvH,CAAA,EAAAE,CAAA,aAAAD,CAAA,MAAAA,CAAA,GAAAC,CAAA,CAAA4E,MAAA,EAAA7E,CAAA,UAAAM,CAAA,GAAAL,CAAA,CAAAD,CAAA,GAAAM,CAAA,CAAAY,UAAA,GAAAZ,CAAA,CAAAY,UAAA,QAAAZ,CAAA,CAAAa,YAAA,kBAAAb,CAAA,KAAAA,CAAA,CAAAc,QAAA,QAAAlB,MAAA,CAAAK,cAAA,CAAAR,CAAA,EAAAwH,cAAA,CAAAjH,CAAA,CAAAkH,GAAA,GAAAlH,CAAA;AAAA,SAAAmH,aAAA1H,CAAA,EAAAE,CAAA,EAAAD,CAAA,WAAAC,CAAA,IAAAqH,iBAAA,CAAAvH,CAAA,CAAAI,SAAA,EAAAF,CAAA,GAAAD,CAAA,IAAAsH,iBAAA,CAAAvH,CAAA,EAAAC,CAAA,GAAAE,MAAA,CAAAK,cAAA,CAAAR,CAAA,iBAAAqB,QAAA,SAAArB,CAAA;AAAA,SAAAwH,eAAAvH,CAAA,QAAAS,CAAA,GAAAiH,YAAA,CAAA1H,CAAA,gCAAAgD,OAAA,CAAAvC,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAiH,aAAA1H,CAAA,EAAAC,CAAA,oBAAA+C,OAAA,CAAAhD,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAD,CAAA,GAAAC,CAAA,CAAAU,MAAA,CAAAiH,WAAA,kBAAA5H,CAAA,QAAAU,CAAA,GAAAV,CAAA,CAAA8B,IAAA,CAAA7B,CAAA,EAAAC,CAAA,gCAAA+C,OAAA,CAAAvC,CAAA,UAAAA,CAAA,YAAAqD,SAAA,yEAAA7D,CAAA,GAAA2H,MAAA,GAAAC,MAAA,EAAA7H,CAAA;AAAA,SAAA8H,gBAAAnH,CAAA,EAAAP,CAAA,UAAAO,CAAA,YAAAP,CAAA,aAAA0D,SAAA;AADmC;AAEnC,SAASkE,YAAYA,CAAA,EAAG;EACtB,IAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,UAAAC,MAAA,CAAUF,GAAG,CAACG,WAAW,CAAC,CAAC,QAAAD,MAAA,CAAKF,GAAG,CAACI,QAAQ,CAAC,CAAC,CAAC1B,QAAQ,CAAC,CAAC,CAAC2B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,OAAAH,MAAA,CAAIF,GAAG,CAACM,UAAU,CAAC,CAAC,CAAC5B,QAAQ,CAAC,CAAC,CAAC2B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,OAAAH,MAAA,CAAIF,GAAG,CAACO,UAAU,CAAC,CAAC,CAAC7B,QAAQ,CAAC,CAAC,CAAC2B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAC5K;AAEAG,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,2BAA2B,CAAC;AAAC,IAEnDW,QAAQ,gBAAAlB,YAAA,CACZ,SAAAkB,SAAYC,IAAI,EAAE;EAAAd,eAAA,OAAAa,QAAA;EAChB,IAAI,CAACE,IAAI,GAAG,IAAI;EAChB,IAAI,CAACC,SAAS,GAAG,IAAI;EACrB,IAAI,CAACC,SAAS,GAAG,IAAI;EAErB,IAAIH,IAAI,CAACC,IAAI,EAAE;IACb,IAAI,CAACA,IAAI,GAAGD,IAAI,CAACC,IAAI;EACvB;EAEA,IAAID,IAAI,CAACI,KAAK,EAAE;IACd,IAAI,CAACF,SAAS,GAAGF,IAAI,CAACI,KAAK;EAC7B;AACF,CAAC;AAGH,SAASC,mBAAmBA,CAACC,aAAa,EAAE;EAC1C,IAAI,CAACA,aAAa,EAAE;EAEpB,IAAMC,QAAQ,4BAAAhB,MAAA,CAA4Be,aAAa,CAAE;EACzDE,YAAY,CAACC,GAAG,GAAGF,QAAQ;;EAE3B;EACAG,cAAc,CAACC,KAAK,CAACC,OAAO,GAAG,OAAO;AACxC;;AAGA;AAAA,IACMC,iBAAiB;EACrB,SAAAA,kBAAA,EAAc;IAAA3B,eAAA,OAAA2B,iBAAA;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;EAAC,OAAAvC,YAAA,CAAAgC,iBAAA;IAAAjC,GAAA;IAAAhH,KAAA;MAAA,IAAAyJ,8BAAA,GAAAhD,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CAED,SAAAgF,QAAA;QAAA,IAAAC,KAAA;QAAA,IAAAC,SAAA,EAAAC,MAAA;QAAA,OAAAvK,mBAAA,GAAAuB,IAAA,UAAAiJ,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAA5E,IAAA,GAAA4E,QAAA,CAAAvG,IAAA;YAAA;cAAAuG,QAAA,CAAA5E,IAAA;cAEI,IAAI,CAAC+D,YAAY,GAAG,KAAKc,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE;gBACzEC,UAAU,EAAE5C,2DAAwB6C;cACtC,CAAC,CAAC;;cAEF;cACMR,SAAS,GAAGS,MAAM,CAACC,OAAO,CAACC,MAAM,CAAC,wBAAwB,CAAC;cAAAR,QAAA,CAAAvG,IAAA;cAAA,OAC3D,IAAI,CAAC0F,YAAY,CAACsB,YAAY,CAACC,SAAS,CAACb,SAAS,CAAC;YAAA;cAEzD3B,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,iDAAiD,EAAEoC,SAAS,CAAC;cAACG,QAAA,CAAAvG,IAAA;cAAA,OAEtEkH,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;gBACtDpC,KAAK,EAAE;kBAAEqC,YAAY,EAAE,CAAC;kBAAEV,UAAU,EAAE;gBAAM;cAC9C,CAAC,CAAC;YAAA;cAFF,IAAI,CAACZ,MAAM,GAAAQ,QAAA,CAAA7G,IAAA;cAIL2G,MAAM,GAAG,IAAI,CAACX,YAAY,CAAC4B,uBAAuB,CAAC,IAAI,CAACvB,MAAM,CAAC;cACrE,IAAI,CAACJ,gBAAgB,GAAG,IAAI4B,gBAAgB,CAAC,IAAI,CAAC7B,YAAY,EAAE,qBAAqB,CAAC;;cAEtF;cACA,IAAI,CAACC,gBAAgB,CAAC6B,IAAI,CAACC,SAAS,GAAG,UAACC,KAAK,EAAK;gBAAA,IAAAC,aAAA;gBAChD,IAAMC,KAAK,GAAGF,KAAK,CAAC9C,IAAI;gBACxB,CAAA+C,aAAA,GAAAxB,KAAI,CAACP,OAAO,EAACpF,IAAI,CAAA2C,KAAA,CAAAwE,aAAA,EAAAtF,kBAAA,CAAIuF,KAAK,EAAC;cAC7B,CAAC;cAEDvB,MAAM,CAACwB,OAAO,CAAC,IAAI,CAAClC,gBAAgB,CAAC;cACrClB,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,mCAAmC,CAAC;cAAC,OAAAuC,QAAA,CAAA1G,MAAA,WAC1D;gBAAEiI,OAAO,EAAE;cAAK,CAAC;YAAA;cAAAvB,QAAA,CAAA5E,IAAA;cAAA4E,QAAA,CAAAwB,EAAA,GAAAxB,QAAA;cAGxB9B,OAAO,CAACuD,KAAK,CAAChE,YAAY,CAAC,CAAC,EAAE,2CAA2C,EAAAuC,QAAA,CAAAwB,EAAO,CAAC;cAAC,OAAAxB,QAAA,CAAA1G,MAAA,WAC3E;gBAAEiI,OAAO,EAAE,KAAK;gBAAEE,KAAK,EAAAzB,QAAA,CAAAwB;cAAC,CAAC;YAAA;YAAA;cAAA,OAAAxB,QAAA,CAAAzE,IAAA;UAAA;QAAA,GAAAoE,OAAA;MAAA,CAEnC;MAAA,SAjCK+B,6BAA6BA,CAAA;QAAA,OAAAhC,8BAAA,CAAA9C,KAAA,OAAAD,SAAA;MAAA;MAAA,OAA7B+E,6BAA6B;IAAA,IAsCnC;EAAA;IAAAzE,GAAA;IAAAhH,KAAA;MAAA,IAAA0L,eAAA,GAAAjF,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CACA,SAAAiH,SAAA;QAAA,IAAAC,MAAA,EAAAC,IAAA,EAAAC,MAAA;QAAA,OAAAxM,mBAAA,GAAAuB,IAAA,UAAAkL,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA7G,IAAA,GAAA6G,SAAA,CAAAxI,IAAA;YAAA;cAAA,KAEM,IAAI,CAACgG,WAAW;gBAAAwC,SAAA,CAAAxI,IAAA;gBAAA;cAAA;cAAA,OAAAwI,SAAA,CAAA3I,MAAA;YAAA;cAAA2I,SAAA,CAAA7G,IAAA;cAGlB;cACA,IAAI,CAACqE,WAAW,GAAG,IAAI;cACvB;AACN;AACA;AACA;AACA;AACA;cACYoC,MAAM,GAAG,IAAIK,WAAW,CAAC,IAAI,CAAC7C,OAAO,CAAC/E,MAAM,GAAG,CAAC,CAAC;cAEvD;AACN;AACA;AACA;AACA;cACYwH,IAAI,GAAG,IAAIK,QAAQ,CAACN,MAAM,CAAC;cAGjC;AACN;AACA;AACA;AACA;AACA;cAEM,IAAI,CAACxC,OAAO,CAAChH,OAAO,CAAC,UAACpC,KAAK,EAAEmM,KAAK,EAAK;gBACrCN,IAAI,CAACO,QAAQ,CAACD,KAAK,GAAG,CAAC,EAAEnM,KAAK,EAAE,IAAI,CAAC;cACvC,CAAC,CAAC;;cAGF;AACN;AACA;AACA;AACA;cACY8L,MAAM,GAAGO,IAAI,CAACjF,MAAM,CAACkF,YAAY,CAAC3F,KAAK,CAAC,IAAI,EAAE,IAAI4F,UAAU,CAACX,MAAM,CAAC,CAAC,CAAC,EAC5E;cAAA,OAAAI,SAAA,CAAA3I,MAAA,WAEOyI,MAAM;YAAA;cAAAE,SAAA,CAAA7G,IAAA;cAAA6G,SAAA,CAAAT,EAAA,GAAAS,SAAA;cAGb/D,OAAO,CAACuD,KAAK,CAAChE,YAAY,CAAC,CAAC,EAAE,uCAAuC,EAAAwE,SAAA,CAAAT,EAAO,CAAC;cAAC,OAAAS,SAAA,CAAA3I,MAAA,WACvE,IAAI;YAAA;cAAA2I,SAAA,CAAA7G,IAAA;cAGX,IAAI,CAACiE,OAAO,GAAG,EAAE;cACjB,IAAI,CAACI,WAAW,GAAG,KAAK;cAAC,OAAAwC,SAAA,CAAAtG,MAAA;YAAA;YAAA;cAAA,OAAAsG,SAAA,CAAA1G,IAAA;UAAA;QAAA,GAAAqG,QAAA;MAAA,CAE5B;MAAA,SArDKa,cAAcA,CAAA;QAAA,OAAAd,eAAA,CAAA/E,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAd8F,cAAc;IAAA;EAAA;IAAAxF,GAAA;IAAAhH,KAAA,EAwDpB,SAAAyM,aAAaA,CAAA,EAAG;MAAA,IAAAC,MAAA;MACdzE,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,gCAAgC,CAAC;;MAE7D;MACA,IAAI,IAAI,CAAC+B,MAAM,EAAE;QACf,IAAI,CAACA,MAAM,CAACoD,SAAS,CAAC,CAAC,CAACvK,OAAO,CAAC,UAAAwK,KAAK;UAAA,OAAIA,KAAK,CAACtH,IAAI,CAAC,CAAC;QAAA,EAAC;QACtD,IAAI,CAACiE,MAAM,GAAG,IAAI;MACpB;;MAEA;MACA,IAAI,IAAI,CAACJ,gBAAgB,EAAE;QACzB,IAAI,CAACA,gBAAgB,CAAC0D,UAAU,CAAC,CAAC;QAClC,IAAI,CAAC1D,gBAAgB,GAAG,IAAI;MAC9B;;MAEA;MACA,IAAI,IAAI,CAACD,YAAY,EAAE;QACrB,IAAI,CAACA,YAAY,CAAC4D,KAAK,CAAC,CAAC,CACtBnK,IAAI,CAAC,YAAM;UACV+J,MAAI,CAACxD,YAAY,GAAG,IAAI;UACxBjB,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,mCAAmC,CAAC;QAClE,CAAC,CAAC,SACI,CAAC,UAAAgE,KAAK,EAAI;UACdvD,OAAO,CAACuD,KAAK,CAAChE,YAAY,CAAC,CAAC,EAAE,8BAA8B,EAAEgE,KAAK,CAAC;QACtE,CAAC,CAAC;MACN;MAEA,IAAI,CAAChC,WAAW,GAAG,KAAK;IAC1B;EAAC;AAAA;AAAA,IAIGuD,aAAa;EACjB,SAAAA,cAAA,EAAc;IAAAzF,eAAA,OAAAyF,aAAA;IACZ,IAAI,CAACC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IACzD,IAAI,CAACC,UAAU,GAAGF,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IACvD,IAAI,CAACE,mBAAmB,GAAGH,QAAQ,CAACC,cAAc,CAAC,qBAAqB,CAAC;IACzE,IAAI,CAACG,oBAAoB,GAAG,IAAI;IAChC,IAAI,CAACC,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,GAAG,GAAG,wBAAwB;IACnC,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;EAAC,OAAAzG,YAAA,CAAA8F,aAAA;IAAA/F,GAAA;IAAAhH,KAAA;MAAA,IAAA2N,eAAA,GAAAlH,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CAED,SAAAkJ,SAAA;QAAA,IAAAC,WAAA,EAAAC,YAAA;QAAA,OAAAxO,mBAAA,GAAAuB,IAAA,UAAAkN,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA7I,IAAA,GAAA6I,SAAA,CAAAxK,IAAA;YAAA;cAAAwK,SAAA,CAAA7I,IAAA;cAEM;cACF,IAAI,CAACoI,iBAAiB,GAAG,IAAItE,iBAAiB,CAAC,CAAC;cAChD,IAAI,CAACqE,kBAAkB,GAAG,IAAIW,kBAAkB,CAAC,CAAC;;cAElD;cAAAD,SAAA,CAAAxK,IAAA;cAAA,OAC0B,IAAI,CAAC+J,iBAAiB,CAAC9B,6BAA6B,CAAC,CAAC;YAAA;cAA1EoC,WAAW,GAAAG,SAAA,CAAA9K,IAAA;cAAA8K,SAAA,CAAAxK,IAAA;cAAA,OACU,IAAI,CAAC8J,kBAAkB,CAACY,8BAA8B,CAAC,CAAC;YAAA;cAA7EJ,YAAY,GAAAE,SAAA,CAAA9K,IAAA;cAAA,MAEd,CAAC2K,WAAW,CAACvC,OAAO,IAAI,CAACwC,YAAY,CAACxC,OAAO;gBAAA0C,SAAA,CAAAxK,IAAA;gBAAA;cAAA;cAAA,MACzC,IAAIX,KAAK,CAAC,6BAA6B,CAAC;YAAA;cAAAmL,SAAA,CAAAxK,IAAA;cAAA,OAG1C,IAAI,CAAC6H,OAAO,CAAC,CAAC;YAAA;cACpB,IAAI,CAAC8C,mBAAmB,CAAC,CAAC;;cAG1B;cACAlB,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACkB,QAAQ,GAAG,IAAI;cAC3D,IAAI,CAACjB,UAAU,CAACiB,QAAQ,GAAG,KAAK;cAChC,IAAI,CAACpB,WAAW,CAACoB,QAAQ,GAAG,IAAI;cAACJ,SAAA,CAAAxK,IAAA;cAAA;YAAA;cAAAwK,SAAA,CAAA7I,IAAA;cAAA6I,SAAA,CAAAzC,EAAA,GAAAyC,SAAA;cAGjC/F,OAAO,CAACuD,KAAK,CAAChE,YAAY,CAAC,CAAC,EAAE,wCAAwC,EAAAwG,SAAA,CAAAzC,EAAO,CAAC;cAC9E;cACA,IAAI,CAAC8C,gBAAgB,CAAC,CAAC;cACvB;cACA,IAAI,CAACX,WAAW,GAAG,IAAI,CAACY,qBAAqB,CAAC,CAAC,GAAG,IAAI,CAACC,qBAAqB,CAAC,CAAC;YAAC;YAAA;cAAA,OAAAP,SAAA,CAAA1I,IAAA;UAAA;QAAA,GAAAsI,QAAA;MAAA,CAElF;MAAA,SA9BKY,cAAcA,CAAA;QAAA,OAAAb,eAAA,CAAAhH,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAd8H,cAAc;IAAA;EAAA;IAAAxH,GAAA;IAAAhH,KAAA,EAiCpB,SAAAmO,mBAAmBA,CAAA,EAAG;MAAA,IAAAM,MAAA;MACpB,IAAI,CAACjB,aAAa,GAAGkB,WAAW,cAAAjI,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CAAC,SAAAiK,SAAA;QAAA,IAAA7C,MAAA,EAAA8C,UAAA;QAAA,OAAAtP,mBAAA,GAAAuB,IAAA,UAAAgO,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA3J,IAAA,GAAA2J,SAAA,CAAAtL,IAAA;YAAA;cAAAsL,SAAA,CAAA3J,IAAA;cAAA2J,SAAA,CAAAtL,IAAA;cAAA,OAERiL,MAAI,CAAClB,iBAAiB,CAACf,cAAc,CAAC,CAAC;YAAA;cAAtDV,MAAM,GAAAgD,SAAA,CAAA5L,IAAA;cAAA,KACR4I,MAAM;gBAAAgD,SAAA,CAAAtL,IAAA;gBAAA;cAAA;cAAAsL,SAAA,CAAAtL,IAAA;cAAA,OACiBiL,MAAI,CAACM,mBAAmB,CAACjD,MAAM,CAAC;YAAA;cAAnD8C,UAAU,GAAAE,SAAA,CAAA5L,IAAA;YAAA;cAAA4L,SAAA,CAAAtL,IAAA;cAAA;YAAA;cAAAsL,SAAA,CAAA3J,IAAA;cAAA2J,SAAA,CAAAvD,EAAA,GAAAuD,SAAA;cAIlB7G,OAAO,CAACuD,KAAK,CAAChE,YAAY,CAAC,CAAC,EAAE,+BAA+B,EAAAsH,SAAA,CAAAvD,EAAO,CAAC;YAAC;YAAA;cAAA,OAAAuD,SAAA,CAAAxJ,IAAA;UAAA;QAAA,GAAAqJ,QAAA;MAAA,CAEzE,IAAEpH,yDAAsB,CAAC;MAE1BU,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,yBAAyB,EAAE,IAAI,CAACgG,aAAa,CAAC;IAC5E;EAAC;IAAAxG,GAAA;IAAAhH,KAAA,EAID,SAAAiP,kBAAkBA,CAAA,EAAG;MAAA,IAAAC,MAAA;MACnB,IAAI,CAACC,eAAe,GAAGnF,MAAM,CAAC0E,WAAW,CAAC,YAAM;QAC9CQ,MAAI,CAAC7B,oBAAoB,CAAC+B,YAAY,CAAC,CAAC;MAC1C,CAAC,EAAE7H,yDAAsB,CAAC;MAE1BU,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,2BAA2B,EAAE,IAAI,CAAC2H,eAAe,CAAC;IAChF;EAAC;IAAAnI,GAAA;IAAAhH,KAAA;MAAA,IAAAqP,oBAAA,GAAA5I,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CAED,SAAA4K,SAAA;QAAA,IAAAC,SAAA,EAAAC,QAAA,EAAAC,MAAA;QAAA,OAAAnQ,mBAAA,GAAAuB,IAAA,UAAA6O,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxK,IAAA,GAAAwK,SAAA,CAAAnM,IAAA;YAAA;cAAA,IAGO,IAAI,CAAC6J,oBAAoB;gBAAAsC,SAAA,CAAAnM,IAAA;gBAAA;cAAA;cAC5ByE,OAAO,CAACuD,KAAK,CAAC,uCAAuC,CAAC;cAAC,OAAAmE,SAAA,CAAAtM,MAAA;YAAA;cAAAsM,SAAA,CAAAxK,IAAA;cAKvD,IAAI,CAACiI,mBAAmB,CAACgB,QAAQ,GAAG,IAAI;cACxC,IAAI,CAACf,oBAAoB,CAAC+B,YAAY,CAAC,CAAC;;cAExC;cAAA,IACK,IAAI,CAAC/B,oBAAoB,CAACuC,eAAe;gBAAAD,SAAA,CAAAnM,IAAA;gBAAA;cAAA;cAAA,MACtC,IAAIX,KAAK,CAAC,gCAAgC,CAAC;YAAA;cAG7C0M,SAAS,GAAG,IAAI,CAAClC,oBAAoB,CAACuC,eAAe;cAAAD,SAAA,CAAAnM,IAAA;cAAA,OAEpCqM,KAAK,IAAAlI,MAAA,CAAIJ,iDAAc,GAAI;gBAChDxE,MAAM,EAAE,MAAM;gBACdgN,OAAO,EAAE;kBAAC,cAAc,EAAE;gBAAkB,CAAC;gBAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;kBAACC,KAAK,EAAEZ;gBAAS,CAAC;cACzC,CAAC,CAAC;YAAA;cAJIC,QAAQ,GAAAG,SAAA,CAAAzM,IAAA;cAAA,IAMTsM,QAAQ,CAACY,EAAE;gBAAAT,SAAA,CAAAnM,IAAA;gBAAA;cAAA;cAAA,MACR,IAAIX,KAAK,wBAAA8E,MAAA,CAAwB6H,QAAQ,CAACa,MAAM,CAAE,CAAC;YAAA;cAAAV,SAAA,CAAAnM,IAAA;cAAA,OAGtCgM,QAAQ,CAACc,IAAI,CAAC,CAAC;YAAA;cAA9Bb,MAAM,GAAAE,SAAA,CAAAzM,IAAA;cACZuF,mBAAmB,CAACgH,MAAM,CAAC/G,aAAa,CAAC;cAACiH,SAAA,CAAAnM,IAAA;cAAA;YAAA;cAAAmM,SAAA,CAAAxK,IAAA;cAAAwK,SAAA,CAAApE,EAAA,GAAAoE,SAAA;cAE1C1H,OAAO,CAACuD,KAAK,CAAChE,YAAY,CAAC,CAAC,EAAE,0BAA0B,EAAAmI,SAAA,CAAApE,EAAO,CAAC;YAAC;cAAAoE,SAAA,CAAAxK,IAAA;cAEjE,IAAI,CAACiI,mBAAmB,CAACgB,QAAQ,GAAG,KAAK;cAAC,OAAAuB,SAAA,CAAAjK,MAAA;YAAA;YAAA;cAAA,OAAAiK,SAAA,CAAArK,IAAA;UAAA;QAAA,GAAAgK,QAAA;MAAA,CAI7C;MAAA,SAtCKiB,mBAAmBA,CAAA;QAAA,OAAAlB,oBAAA,CAAA1I,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAnB6J,mBAAmB;IAAA;EAAA;IAAAvJ,GAAA;IAAAhH,KAAA;MAAA,IAAAwQ,oBAAA,GAAA/J,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CAyCzB,SAAA+L,SAA0B3E,MAAM;QAAA,IAAA4E,qBAAA;QAAA,IAAAC,WAAA,EAAAC,OAAA;QAAA,OAAAtR,mBAAA,GAAAuB,IAAA,UAAAgQ,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA3L,IAAA,GAAA2L,SAAA,CAAAtN,IAAA;YAAA;cAAA,MAC1B,IAAI,CAAC8F,SAAS,IAAI,IAAI;gBAAAwH,SAAA,CAAAtN,IAAA;gBAAA;cAAA;cACxByE,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,2BAA2B,CAAC;cAAC,OAAAsJ,SAAA,CAAAzN,MAAA;YAAA;cAI3D;cACMsN,WAAW,GAAG,CAAC;gBACnBI,SAAS,EAAE,WAAW;gBACtB3I,IAAI,EAAE0D;cACR,CAAC,CAAC,EAEF;cACA,IAAI,IAAI,CAAC4B,WAAW,KAAAgD,qBAAA,GAAI,IAAI,CAACrD,oBAAoB,cAAAqD,qBAAA,eAAzBA,qBAAA,CAA2Bd,eAAe,EAAE;gBAClEe,WAAW,CAAC3M,IAAI,CAAC;kBACf+M,SAAS,EAAE,YAAY;kBACvB3I,IAAI,EAAE,IAAI,CAACiF,oBAAoB,CAACuC;gBAClC,CAAC,CAAC;cACJ;cAGMgB,OAAO,GAAG;gBACdI,cAAc,EAAE;kBACdC,YAAY,EAAEN;gBAChB;cACF,CAAC;cACD,IAAI,CAACrH,SAAS,CAAC4H,IAAI,CAACjB,IAAI,CAACC,SAAS,CAACU,OAAO,CAAC,CAAC;cAC5C3I,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,kBAAkB,CAAC;YAAC;YAAA;cAAA,OAAAsJ,SAAA,CAAAxL,IAAA;UAAA;QAAA,GAAAmL,QAAA;MAAA,CACjD;MAAA,SA5BK1B,mBAAmBA,CAAAoC,EAAA;QAAA,OAAAX,oBAAA,CAAA7J,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAnBqI,mBAAmB;IAAA;EAAA;IAAA/H,GAAA;IAAAhH,KAAA;MAAA,IAAAoR,cAAA,GAAA3K,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CA+BzB,SAAA2M,SAAA;QAAA,IAAAC,qBAAA,EAAAC,qBAAA;QAAA,OAAAjS,mBAAA,GAAAuB,IAAA,UAAA2Q,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAtM,IAAA,GAAAsM,SAAA,CAAAjO,IAAA;YAAA;cACEyE,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,qBAAqB,CAAC;cAElD,IAAI,IAAI,CAACkG,WAAW,IAAI,IAAI,CAACL,oBAAoB,EAAE;gBACnD,IAAI,CAACA,oBAAoB,CAACZ,aAAa,CAAC,CAAC;gBACzC,IAAI,CAACY,oBAAoB,GAAG,IAAI;cAChC;cAEA,IAAI,IAAI,CAACG,aAAa,EAAE;gBACtBkE,aAAa,CAAC,IAAI,CAAClE,aAAa,CAAC;gBACjC,IAAI,CAACA,aAAa,GAAG,IAAI;cAC3B;cAEA,IAAI,IAAI,CAAClE,SAAS,EAAE;gBAClB,IAAI,CAACA,SAAS,CAACwD,KAAK,CAAC,CAAC;gBACtB,IAAI,CAACxD,SAAS,GAAG,IAAI;cACvB;cAEA,CAAAgI,qBAAA,OAAI,CAAC/D,iBAAiB,cAAA+D,qBAAA,eAAtBA,qBAAA,CAAwB7E,aAAa,CAAC,CAAC;cACvC,CAAA8E,qBAAA,OAAI,CAACjE,kBAAkB,cAAAiE,qBAAA,eAAvBA,qBAAA,CAAyB9E,aAAa,CAAC,CAAC;cAExCQ,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACkB,QAAQ,GAAG,KAAK;cAC5D,IAAI,CAACjB,UAAU,CAACiB,QAAQ,GAAG,IAAI;cAC/B,IAAI,CAACpB,WAAW,CAACoB,QAAQ,GAAG,KAAK;YAAC;YAAA;cAAA,OAAAqD,SAAA,CAAAnM,IAAA;UAAA;QAAA,GAAA+L,QAAA;MAAA,CACnC;MAAA,SAxBKM,aAAaA,CAAA;QAAA,OAAAP,cAAA,CAAAzK,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAbiL,aAAa;IAAA;EAAA;IAAA3K,GAAA;IAAAhH,KAAA;MAAA,IAAA4R,QAAA,GAAAnL,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CA2BnB,SAAAmN,UAAA;QAAA,IAAAC,MAAA;QAAA,OAAAxS,mBAAA,GAAAuB,IAAA,UAAAkR,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA7M,IAAA,GAAA6M,UAAA,CAAAxO,IAAA;YAAA;cACEyE,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,cAAc,EAAE,IAAI,CAACiG,GAAG,CAAC;cAErD,IAAI,CAACnE,SAAS,GAAG,IAAI2I,SAAS,CAAC,IAAI,CAACxE,GAAG,CAAC;cAExC,IAAI,CAACnE,SAAS,CAAC4I,OAAO,GAAG,UAAChH,KAAK,EAAK;gBAClCjD,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,oBAAoB,EAAE0D,KAAK,CAAC;gBACxD,IAAIA,KAAK,CAACiH,IAAI,KAAK,IAAI,EAAE;kBACvBC,KAAK,CAAC,gCAAgC,CAAC;gBACzC;cACF,CAAC;cAGD,IAAI,CAAC9I,SAAS,CAAC+I,OAAO,GAAG,UAACnH,KAAK,EAAK;gBAClCjD,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,mBAAmB,EAAE0D,KAAK,CAAC;cACzD,CAAC;cAED,IAAI,CAAC5B,SAAS,CAACgJ,MAAM;gBAAA,IAAAC,KAAA,GAAA9L,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CAAG,SAAA8N,SAAOtH,KAAK;kBAAA,OAAA5L,mBAAA,GAAAuB,IAAA,UAAA4R,UAAAC,SAAA;oBAAA,kBAAAA,SAAA,CAAAvN,IAAA,GAAAuN,SAAA,CAAAlP,IAAA;sBAAA;wBAClCyE,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,kBAAkB,EAAE0D,KAAK,CAAC;wBAACwH,SAAA,CAAAlP,IAAA;wBAAA,OACjDsO,MAAI,CAACa,uBAAuB,CAAC,CAAC;sBAAA;sBAAA;wBAAA,OAAAD,SAAA,CAAApN,IAAA;oBAAA;kBAAA,GAAAkN,QAAA;gBAAA,CACrC;gBAAA,iBAAAI,GAAA;kBAAA,OAAAL,KAAA,CAAA5L,KAAA,OAAAD,SAAA;gBAAA;cAAA;cAED,IAAI,CAAC4C,SAAS,CAAC2B,SAAS;gBAAA,IAAA4H,KAAA,GAAApM,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CAAG,SAAAoO,SAAO5H,KAAK;kBAAA,OAAA5L,mBAAA,GAAAuB,IAAA,UAAAkS,UAAAC,SAAA;oBAAA,kBAAAA,SAAA,CAAA7N,IAAA,GAAA6N,SAAA,CAAAxP,IAAA;sBAAA;wBAAAwP,SAAA,CAAAxP,IAAA;wBAAA,OAC/BsO,MAAI,CAACmB,cAAc,CAAC/H,KAAK,CAAC;sBAAA;sBAAA;wBAAA,OAAA8H,SAAA,CAAA1N,IAAA;oBAAA;kBAAA,GAAAwN,QAAA;gBAAA,CACjC;gBAAA,iBAAAI,GAAA;kBAAA,OAAAL,KAAA,CAAAlM,KAAA,OAAAD,SAAA;gBAAA;cAAA;YAAC;YAAA;cAAA,OAAAsL,UAAA,CAAA1M,IAAA;UAAA;QAAA,GAAAuM,SAAA;MAAA,CAEH;MAAA,SA1BKxG,OAAOA,CAAA;QAAA,OAAAuG,QAAA,CAAAjL,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAP2E,OAAO;IAAA;EAAA;IAAArE,GAAA;IAAAhH,KAAA;MAAA,IAAAmT,wBAAA,GAAA1M,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CA4Bb,SAAA0O,UAAA;QAAA,IAAAC,oBAAA;QAAA,OAAA/T,mBAAA,GAAAuB,IAAA,UAAAyS,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAApO,IAAA,GAAAoO,UAAA,CAAA/P,IAAA;YAAA;cAEEyE,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,uBAAuB,CAAC;cAC9C6L,oBAAoB,GAAG;gBAC3BG,KAAK,EAAE;kBACLC,iBAAiB,EAAE;oBAAEC,mBAAmB,EAAE,CAACnM,+EAA4C;kBAAE,CAAC;kBAC1FoM,KAAK,EAAEpM,+CAAYoM;gBACrB;cACF,CAAC;cAED,IAAI,CAACrK,SAAS,CAAC4H,IAAI,CAACjB,IAAI,CAACC,SAAS,CAACmD,oBAAoB,CAAC,CAAC;YAAC;YAAA;cAAA,OAAAE,UAAA,CAAAjO,IAAA;UAAA;QAAA,GAAA8N,SAAA;MAAA,CAE3D;MAAA,SAZKT,uBAAuBA,CAAA;QAAA,OAAAQ,wBAAA,CAAAxM,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAvBiM,uBAAuB;IAAA;EAAA;IAAA3L,GAAA;IAAAhH,KAAA;MAAA,IAAA4T,eAAA,GAAAnN,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CAc7B,SAAAmP,UAAqB3I,KAAK;QAAA,IAAA4I,WAAA,EAAAtE,QAAA;QAAA,OAAAlQ,mBAAA,GAAAuB,IAAA,UAAAkT,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA7O,IAAA,GAAA6O,UAAA,CAAAxQ,IAAA;YAAA;cAClBsQ,WAAW,GAAG7D,IAAI,CAACgE,KAAK,CAAC/I,KAAK,CAAC9C,IAAI,CAAC;cACpCoH,QAAQ,GAAG,IAAIrH,QAAQ,CAAC2L,WAAW,CAAC;cAAA,KAEtCtE,QAAQ,CAAClH,SAAS;gBAAA0L,UAAA,CAAAxQ,IAAA;gBAAA;cAAA;cAAAwQ,UAAA,CAAAxQ,IAAA;cAAA,OACZ,IAAI,CAAC8J,kBAAkB,CAAC4G,sBAAsB,CAAC1E,QAAQ,CAAClH,SAAS,CAAC;YAAA;cAE5E,IAAIkH,QAAQ,CAACnH,IAAI,EAAE;gBACf8L,cAAc,CAAC3E,QAAQ,CAACnH,IAAI,CAAC;cACjC;;cAEA;cAAA,KACIyL,WAAW,CAACpL,aAAa;gBAAAsL,UAAA,CAAAxQ,IAAA;gBAAA;cAAA;cAAAwQ,UAAA,CAAAxQ,IAAA;cAAA,OACnBiF,mBAAmB,CAACqL,WAAW,CAACpL,aAAa,CAAC;YAAA;YAAA;cAAA,OAAAsL,UAAA,CAAA1O,IAAA;UAAA;QAAA,GAAAuO,SAAA;MAAA,CAE3D;MAAA,SAfOZ,cAAcA,CAAAmB,GAAA;QAAA,OAAAR,eAAA,CAAAjN,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAduM,cAAc;IAAA;EAAA;IAAAjM,GAAA;IAAAhH,KAAA,EAoBpB,SAAAsO,qBAAqBA,CAAA,EAAG;MACtB,IAAI,IAAI,CAACjB,oBAAoB,EAAE;QAC7B,IAAI,CAACA,oBAAoB,CAACZ,aAAa,CAAC,CAAC;QACzC,IAAI,CAACY,oBAAoB,GAAG,IAAI;MAClC;IACF;EAAC;IAAArG,GAAA;IAAAhH,KAAA,EAED,SAAAuO,qBAAqBA,CAAA,EAAG;MAAA,IAAA8F,sBAAA,EAAAC,sBAAA;MACtB,CAAAD,sBAAA,OAAI,CAAC9G,iBAAiB,cAAA8G,sBAAA,eAAtBA,sBAAA,CAAwB5H,aAAa,CAAC,CAAC;MACvC,CAAA6H,sBAAA,OAAI,CAAChH,kBAAkB,cAAAgH,sBAAA,eAAvBA,sBAAA,CAAyB7H,aAAa,CAAC,CAAC;IAC1C;EAAC;AAAA,KAGH;AAAA,IACMwB,kBAAkB;EACtB,SAAAA,mBAAA,EAAc;IAAA3G,eAAA,OAAA2G,kBAAA;IACZ,IAAI,CAAC/E,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACoL,WAAW,GAAG,KAAK;EAC1B;;EAEA;EAAA,OAAAtN,YAAA,CAAAgH,kBAAA;IAAAjH,GAAA;IAAAhH,KAAA;MAAA,IAAAwU,+BAAA,GAAA/N,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CACA,SAAA+P,UAAA;QAAA,IAAA7K,SAAA;QAAA,OAAAtK,mBAAA,GAAAuB,IAAA,UAAA6T,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAxP,IAAA,GAAAwP,UAAA,CAAAnR,IAAA;YAAA;cAAA,KACM,IAAI,CAAC+Q,WAAW;gBAAAI,UAAA,CAAAnR,IAAA;gBAAA;cAAA;cAAA,OAAAmR,UAAA,CAAAtR,MAAA;YAAA;cAAAsR,UAAA,CAAAxP,IAAA;cAGlB,IAAI,CAAC+D,YAAY,GAAG,KAAKc,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE;gBACzEC,UAAU,EAAE5C,4DAAyBqN;cACvC,CAAC,CAAC;cACF;cACMhL,SAAS,GAAGS,MAAM,CAACC,OAAO,CAACC,MAAM,CAAC,yBAAyB,CAAC;cAAAoK,UAAA,CAAAnR,IAAA;cAAA,OAC5D,IAAI,CAAC0F,YAAY,CAACsB,YAAY,CAACC,SAAS,CAACb,SAAS,CAAC;YAAA;cAEzD3B,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,kDAAkD,EAAEoC,SAAS,CAAC;cAE1F,IAAI,CAACT,gBAAgB,GAAG,IAAI4B,gBAAgB,CAAC,IAAI,CAAC7B,YAAY,EAAE,sBAAsB,CAAC;cACvF,IAAI,CAACC,gBAAgB,CAACkC,OAAO,CAAC,IAAI,CAACnC,YAAY,CAAC2L,WAAW,CAAC;cAC5D,IAAI,CAACN,WAAW,GAAG,IAAI;cACvBtM,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,oCAAoC,CAAC;cAAC,OAAAmN,UAAA,CAAAtR,MAAA,WAC3D;gBAAEiI,OAAO,EAAE;cAAK,CAAC;YAAA;cAAAqJ,UAAA,CAAAxP,IAAA;cAAAwP,UAAA,CAAApJ,EAAA,GAAAoJ,UAAA;cAGxB1M,OAAO,CAACuD,KAAK,CAAChE,YAAY,CAAC,CAAC,EAAE,4CAA4C,EAAAmN,UAAA,CAAApJ,EAAO,CAAC;cAAC,OAAAoJ,UAAA,CAAAtR,MAAA,WAC5E;gBAAEiI,OAAO,EAAE,KAAK;gBAAEE,KAAK,EAAAmJ,UAAA,CAAApJ;cAAC,CAAC;YAAA;YAAA;cAAA,OAAAoJ,UAAA,CAAArP,IAAA;UAAA;QAAA,GAAAmP,SAAA;MAAA,CAEnC;MAAA,SAvBKvG,8BAA8BA,CAAA;QAAA,OAAAsG,+BAAA,CAAA7N,KAAA,OAAAD,SAAA;MAAA;MAAA,OAA9BwH,8BAA8B;IAAA;EAAA;IAAAlH,GAAA;IAAAhH,KAAA,EAyBpC,SAAAyM,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACtD,gBAAgB,EAAE;QACzB,IAAI,CAACA,gBAAgB,CAAC0D,UAAU,CAAC,CAAC;MACpC;MACA,IAAI,IAAI,CAAC3D,YAAY,EAAE;QACrB,IAAI,CAACA,YAAY,CAAC4D,KAAK,CAAC,CAAC;MAC3B;IACF;;IAEA;EAAA;IAAA9F,GAAA;IAAAhH,KAAA;MAAA,IAAA8U,uBAAA,GAAArO,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CACA,SAAAqQ,UAA6BC,gBAAgB;QAAA,IAAAC,WAAA,EAAAC,WAAA;QAAA,OAAA5V,mBAAA,GAAAuB,IAAA,UAAAsU,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAjQ,IAAA,GAAAiQ,UAAA,CAAA5R,IAAA;YAAA;cAAA4R,UAAA,CAAAjQ,IAAA;cAAA,MAErC,IAAI,CAAC+D,YAAY,CAACmM,KAAK,KAAK,WAAW;gBAAAD,UAAA,CAAA5R,IAAA;gBAAA;cAAA;cAAA4R,UAAA,CAAA5R,IAAA;cAAA,OACnC,IAAI,CAAC0F,YAAY,CAACoM,MAAM,CAAC,CAAC;YAAA;cAE5BL,WAAW,GAAGM,mBAAmB,CAACP,gBAAgB,CAAC;cACnDE,WAAW,GAAGM,uBAAuB,CAACP,WAAW,CAAC,EAExD;cACA,IAAI,CAAC9L,gBAAgB,CAAC6B,IAAI,CAACyK,WAAW,CAACP,WAAW,CAAC;cAACE,UAAA,CAAA5R,IAAA;cAAA;YAAA;cAAA4R,UAAA,CAAAjQ,IAAA;cAAAiQ,UAAA,CAAA7J,EAAA,GAAA6J,UAAA;cAEpDnN,OAAO,CAACuD,KAAK,CAAChE,YAAY,CAAC,CAAC,EAAE,+BAA+B,EAAA4N,UAAA,CAAA7J,EAAO,CAAC;YAAC;YAAA;cAAA,OAAA6J,UAAA,CAAA9P,IAAA;UAAA;QAAA,GAAAyP,SAAA;MAAA,CAEzE;MAAA,SAbKb,sBAAsBA,CAAAwB,GAAA;QAAA,OAAAZ,uBAAA,CAAAnO,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAtBwN,sBAAsB;IAAA;EAAA;AAAA;AAgB9B,SAASqB,mBAAmBA,CAACI,MAAM,EAAE;EACnC;EACA,IAAMC,YAAY,GAAG5L,MAAM,CAAC6L,IAAI,CAACF,MAAM,CAAC;EACxC,IAAMG,KAAK,GAAG,IAAIvJ,UAAU,CAACqJ,YAAY,CAACvR,MAAM,CAAC;EACjD,KAAK,IAAIpE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2V,YAAY,CAACvR,MAAM,EAAEpE,CAAC,EAAE,EAAE;IAC5C6V,KAAK,CAAC7V,CAAC,CAAC,GAAG2V,YAAY,CAACG,UAAU,CAAC9V,CAAC,CAAC;EACvC;EACA;;EAEA,OAAO6V,KAAK,CAAClK,MAAM;AACrB;AAEA,SAAS4J,uBAAuBA,CAACpM,OAAO,EAAE;EACxC,IAAM4M,UAAU,GAAG,IAAIC,UAAU,CAAC7M,OAAO,CAAC;EAC1C,IAAM8M,YAAY,GAAG,IAAIC,YAAY,CAACH,UAAU,CAAC3R,MAAM,CAAC;EACxD;;EAEA,KAAK,IAAIpE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+V,UAAU,CAAC3R,MAAM,EAAEpE,CAAC,EAAE,EAAE;IAC1CiW,YAAY,CAACjW,CAAC,CAAC,GAAG+V,UAAU,CAAC/V,CAAC,CAAC,GAAG,KAAK;EACzC;EACA;;EAEA,OAAOiW,YAAY;AACrB;AAEA,IAAME,WAAW,GAAGnJ,QAAQ,CAACoJ,aAAa,CAAC,KAAK,CAAC;AACjDD,WAAW,CAACE,EAAE,GAAG,mBAAmB;AACpC;AACAF,WAAW,CAACG,SAAS,2qBAWpB;AACD,CAAC;;AAED;AACA,SAASpC,cAAcA,CAAC9L,IAAI,EAAE;EAC5BJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,IAAI,CAAC;EACtC,IAAI;IACF;IACA,IAAMmO,QAAQ,GAAGvG,IAAI,CAACgE,KAAK,CAAC5L,IAAI,CAAC;IACjCJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEsO,QAAQ,CAAC;;IAEvC;IACA,IAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAAC,CAAChH,QAAQ,CAACC,MAAM;;IAEzC;IACA,IAAMiH,UAAU,GAAGD,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAEvC;IACA,IAAMC,YAAY,GAAG3J,QAAQ,CAACoJ,aAAa,CAAC,GAAG,CAAC;IAChD;IACAO,YAAY,CAACL,SAAS,kCAAA5O,MAAA,CAAkC+O,UAAU,cAAW;;IAE7E;IACA,IAAMG,OAAO,GAAG5J,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAClD2J,OAAO,CAACC,WAAW,CAACF,YAAY,CAAC;;IAEjC;IACAC,OAAO,CAACE,SAAS,GAAGF,OAAO,CAACG,YAAY;EAC1C,CAAC,CAAC,OAAOxL,KAAK,EAAE;IACdvD,OAAO,CAACuD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD;AACF;AAEA,IAAMzC,KAAK,GAAGkE,QAAQ,CAACoJ,aAAa,CAAC,OAAO,CAAC;AAC7CtN,KAAK,CAACkO,WAAW,k2GAqJhB;;AAED;AACAhK,QAAQ,CAACiK,IAAI,CAACJ,WAAW,CAAC/N,KAAK,CAAC;AAChCkE,QAAQ,CAAC+C,IAAI,CAAC8G,WAAW,CAACV,WAAW,CAAC;;AAGtC;;AAEA;AACA,IAAMtN,cAAc,GAAGmE,QAAQ,CAACoJ,aAAa,CAAC,KAAK,CAAC;AACpDvN,cAAc,CAACwN,EAAE,GAAG,uBAAuB;AAC3CxN,cAAc,CAACC,KAAK,CAACoO,QAAQ,GAAG,OAAO;AACvCrO,cAAc,CAACC,KAAK,CAACqO,GAAG,GAAG,KAAK;AAChCtO,cAAc,CAACC,KAAK,CAACsO,IAAI,GAAG,KAAK;AACjCvO,cAAc,CAACC,KAAK,CAACuO,SAAS,GAAG,uBAAuB;AACxDxO,cAAc,CAACC,KAAK,CAACwO,eAAe,GAAG,iBAAiB;AACxDzO,cAAc,CAACC,KAAK,CAACyO,OAAO,GAAG,MAAM;AACrC1O,cAAc,CAACC,KAAK,CAAC0O,YAAY,GAAG,KAAK;AACzC3O,cAAc,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC,CAAC;AACvCF,cAAc,CAACC,KAAK,CAAC2O,MAAM,GAAG,OAAO;AACrC5O,cAAc,CAACC,KAAK,CAAC4O,SAAS,GAAG,QAAQ;;AAEzC;AACA,IAAM/O,YAAY,GAAGqE,QAAQ,CAACoJ,aAAa,CAAC,KAAK,CAAC;AAClDzN,YAAY,CAAC0N,EAAE,GAAG,cAAc;AAChC1N,YAAY,CAACG,KAAK,CAAC6O,QAAQ,GAAG,MAAM;AACpChP,YAAY,CAACG,KAAK,CAAC8O,SAAS,GAAG,MAAM;AACrCjP,YAAY,CAACG,KAAK,CAACC,OAAO,GAAG,OAAO;AACpCJ,YAAY,CAACG,KAAK,CAAC+O,YAAY,GAAG,MAAM;;AAExC;AACA,IAAMC,WAAW,GAAG9K,QAAQ,CAACoJ,aAAa,CAAC,QAAQ,CAAC;AACpD0B,WAAW,CAACC,SAAS,GAAG,OAAO;AAC/BD,WAAW,CAAChP,KAAK,CAACyO,OAAO,GAAG,WAAW;AACvCO,WAAW,CAAChP,KAAK,CAACkP,MAAM,GAAG,MAAM;AACjCF,WAAW,CAAChP,KAAK,CAACwO,eAAe,GAAG,SAAS;AAC7CQ,WAAW,CAAChP,KAAK,CAACmP,KAAK,GAAG,OAAO;AACjCH,WAAW,CAAChP,KAAK,CAAC0O,YAAY,GAAG,KAAK;AACtCM,WAAW,CAAChP,KAAK,CAACoP,MAAM,GAAG,SAAS;;AAEpC;AACAJ,WAAW,CAACK,gBAAgB,CAAC,OAAO,EAAE,YAAM;EAC1CtP,cAAc,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC,CAAC;AACzC,CAAC,CAAC;;AAEF;AACAF,cAAc,CAACgO,WAAW,CAAClO,YAAY,CAAC;AACxCE,cAAc,CAACgO,WAAW,CAACiB,WAAW,CAAC;;AAEvC;AACA9K,QAAQ,CAAC+C,IAAI,CAAC8G,WAAW,CAAChO,cAAc,CAAC;;AAIzC;AACA,IAAIuP,UAAU,GAAG,KAAK;AACtB,IAAIC,OAAO,EAAEC,OAAO;;AAEpB;AACAnC,WAAW,CAACgC,gBAAgB,CAAC,WAAW,EAAE,UAAClN,KAAK,EAAK;EACnDmN,UAAU,GAAG,IAAI;;EAEjB;EACA,IAAMG,IAAI,GAAGpC,WAAW,CAACqC,qBAAqB,CAAC,CAAC;EAChDH,OAAO,GAAGpN,KAAK,CAACwN,OAAO,GAAGF,IAAI,CAACnB,IAAI;EACnCkB,OAAO,GAAGrN,KAAK,CAACyN,OAAO,GAAGH,IAAI,CAACpB,GAAG;;EAElC;EACAhB,WAAW,CAACrN,KAAK,CAACoP,MAAM,GAAG,MAAM;AACnC,CAAC,CAAC;AAEFlL,QAAQ,CAACmL,gBAAgB,CAAC,WAAW,EAAE,UAAClN,KAAK,EAAK;EAChD,IAAImN,UAAU,EAAE;IAEd;IACAnN,KAAK,CAAC0N,cAAc,CAAC,CAAC;;IAEtB;IACAxC,WAAW,CAACrN,KAAK,CAACsO,IAAI,MAAA1P,MAAA,CAAMuD,KAAK,CAACwN,OAAO,GAAGJ,OAAO,OAAI;IACvDlC,WAAW,CAACrN,KAAK,CAACqO,GAAG,MAAAzP,MAAA,CAAMuD,KAAK,CAACyN,OAAO,GAAGJ,OAAO,OAAI;EACxD;AACF,CAAC,CAAC;AAEFtL,QAAQ,CAACmL,gBAAgB,CAAC,SAAS,EAAE,YAAM;EACzCC,UAAU,GAAG,KAAK;;EAElB;EACAjC,WAAW,CAACrN,KAAK,CAACoP,MAAM,GAAG,SAAS;AACtC,CAAC,CAAC;;AAIF;AACAlL,QAAQ,CAAC+C,IAAI,CAAC8G,WAAW,CAACV,WAAW,CAAC;AAEtCnO,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC,CAAC,EAAE,uBAAuB,CAAC;AAEpD,IAAMqR,qBAAqB,GAAG,IAAI9L,aAAa,CAAC,CAAC;;AAGjD;AACA8L,qBAAqB,CAACnL,WAAW,GAAG,KAAK;AAAC,SAE3B0B,YAAYA,CAAA;EAAA,OAAA0J,aAAA,CAAAnS,KAAA,OAAAD,SAAA;AAAA;AAAA,SAAAoS,cAAA;EAAAA,aAAA,GAAArS,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CAA3B,SAAAqU,UAAA;IAAA,OAAAzZ,mBAAA,GAAAuB,IAAA,UAAAmY,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA9T,IAAA,GAAA8T,UAAA,CAAAzV,IAAA;QAAA;UAAA,OAAAyV,UAAA,CAAA5V,MAAA,WACS,IAAI0B,OAAO,CAAC,UAACtC,OAAO,EAAEyW,MAAM,EAAK;YACtC7O,MAAM,CAACC,OAAO,CAAC6O,WAAW,CACxB;cAAEC,MAAM,EAAE;YAAoB,CAAC,EAC/B,UAAC5J,QAAQ,EAAK;cACZ,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAAClE,OAAO,KAAK,KAAK,EAAE;gBAC3CrD,OAAO,CAACuD,KAAK,CAAC,2BAA2B,EAAE,CAAAgE,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEhE,KAAK,KAAI,eAAe,CAAC;gBAC9E0N,MAAM,CAAC,IAAIrW,KAAK,CAAC,CAAA2M,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEhE,KAAK,KAAI,eAAe,CAAC,CAAC;gBACrD;cACF;cACA/I,OAAO,CAAC+M,QAAQ,CAAC6J,OAAO,CAAC1C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,CACF,CAAC;UACH,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAsC,UAAA,CAAA3T,IAAA;MAAA;IAAA,GAAAyT,SAAA;EAAA,CACH;EAAA,OAAAD,aAAA,CAAAnS,KAAA,OAAAD,SAAA;AAAA;AAAA,SAGc4S,wBAAwBA,CAAAC,GAAA;EAAA,OAAAC,yBAAA,CAAA7S,KAAA,OAAAD,SAAA;AAAA,EAevC;AAAA,SAAA8S,0BAAA;EAAAA,yBAAA,GAAA/S,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CAfA,SAAA+U,UAAwCC,aAAa;IAAA,IAAAlK,QAAA;IAAA,OAAAlQ,mBAAA,GAAAuB,IAAA,UAAA8Y,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAzU,IAAA,GAAAyU,UAAA,CAAApW,IAAA;QAAA;UAAAoW,UAAA,CAAApW,IAAA;UAAA,OAC5BqM,KAAK,IAAAlI,MAAA,CAAIJ,iDAAc,GAAI;YAChDxE,MAAM,EAAE,MAAM;YACdgN,OAAO,EAAE;cAAC,cAAc,EAAE;YAAkB,CAAC;YAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAACC,KAAK,EAAEuJ;YAAa,CAAC;UAC7C,CAAC,CAAC;QAAA;UAJIlK,QAAQ,GAAAoK,UAAA,CAAA1W,IAAA;UAAA,IAMTsM,QAAQ,CAACY,EAAE;YAAAwJ,UAAA,CAAApW,IAAA;YAAA;UAAA;UAAA,MACR,IAAIX,KAAK,wBAAA8E,MAAA,CAAwB6H,QAAQ,CAACa,MAAM,CAAE,CAAC;QAAA;UAAA,OAAAuJ,UAAA,CAAAvW,MAAA,WAEpDmM,QAAQ;QAAA;QAAA;UAAA,OAAAoK,UAAA,CAAAtU,IAAA;MAAA;IAAA,GAAAmU,SAAA;EAAA,CAChB;EAAA,OAAAD,yBAAA,CAAA7S,KAAA,OAAAD,SAAA;AAAA;AAKAmS,qBAAqB,CAACzL,mBAAmB,CAACgL,gBAAgB,CACzD,OAAO,eAAA3R,iBAAA,cAAAnH,mBAAA,GAAAoF,IAAA,CACP,SAAAmV,UAAA;EAAA,IAAAH,aAAA,EAAAlK,QAAA,EAAAC,MAAA;EAAA,OAAAnQ,mBAAA,GAAAuB,IAAA,UAAAiZ,WAAAC,UAAA;IAAA,kBAAAA,UAAA,CAAA5U,IAAA,GAAA4U,UAAA,CAAAvW,IAAA;MAAA;QAAAuW,UAAA,CAAA5U,IAAA;QAEI;QACA0T,qBAAqB,CAACzL,mBAAmB,CAACgB,QAAQ,GAAG,IAAI;QAAC2L,UAAA,CAAAvW,IAAA;QAAA,OAC5B4L,YAAY,CAAC,CAAC;MAAA;QAApCsK,aAAa,GAAAK,UAAA,CAAA7W,IAAA;QAAA,IAEdwW,aAAa;UAAAK,UAAA,CAAAvW,IAAA;UAAA;QAAA;QAAA,MACV,IAAIX,KAAK,CAAC,gCAAgC,CAAC;MAAA;QAAAkX,UAAA,CAAAvW,IAAA;QAAA,OAG5B8V,wBAAwB,CAACI,aAAa,CAAC;MAAA;QAAxDlK,QAAQ,GAAAuK,UAAA,CAAA7W,IAAA;QAAA6W,UAAA,CAAAvW,IAAA;QAAA,OAEOgM,QAAQ,CAACc,IAAI,CAAC,CAAC;MAAA;QAA9Bb,MAAM,GAAAsK,UAAA,CAAA7W,IAAA;QAEZuF,mBAAmB,CAACgH,MAAM,CAAC/G,aAAa,CAAC;QAACqR,UAAA,CAAAvW,IAAA;QAAA;MAAA;QAAAuW,UAAA,CAAA5U,IAAA;QAAA4U,UAAA,CAAAxO,EAAA,GAAAwO,UAAA;QAG1C9R,OAAO,CAACuD,KAAK,CAAChE,YAAY,CAAC,CAAC,EAAE,0BAA0B,EAAAuS,UAAA,CAAAxO,EAAO,CAAC;MAAC;QAAAwO,UAAA,CAAA5U,IAAA;QAEjE0T,qBAAqB,CAACzL,mBAAmB,CAACgB,QAAQ,GAAG,KAAK;QAC1D;QAAA,OAAA2L,UAAA,CAAArU,MAAA;MAAA;MAAA;QAAA,OAAAqU,UAAA,CAAAzU,IAAA;IAAA;EAAA,GAAAuU,SAAA;AAAA,CAGD,EACP,CAAC;AAED,IAAMG,gBAAgB,GAAG/M,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;AAIpE8M,gBAAgB,CAAC5B,gBAAgB,CAAC,OAAO,EAAE,YAAM;EAC/CS,qBAAqB,CAACnL,WAAW,GAAG,CAACmL,qBAAqB,CAACnL,WAAW;EAEtEmL,qBAAqB,CAACzL,mBAAmB,CAACrE,KAAK,CAACC,OAAO,GAAG6P,qBAAqB,CAACnL,WAAW,GAAG,cAAc,GAAG,MAAM;EACrHmL,qBAAqB,CAAC7L,WAAW,CAACjE,KAAK,CAACC,OAAO,GAAG6P,qBAAqB,CAACnL,WAAW,GAAG,MAAM,GAAG,cAAc;EAC7GmL,qBAAqB,CAAC1L,UAAU,CAACpE,KAAK,CAACC,OAAO,GAAG6P,qBAAqB,CAACnL,WAAW,GAAG,MAAM,GAAG,cAAc;;EAE5G;;EAEAsM,gBAAgB,CAAChC,SAAS,GAAGa,qBAAqB,CAACnL,WAAW,GAC1D,MAAM,GACN,WAAW;AACjB,CAAC,CAAC;AAGFmL,qBAAqB,CAAC7L,WAAW,CAACoL,gBAAgB,CAAC,OAAO,EAAE;EAAA,OAAMS,qBAAqB,CAACrK,cAAc,CAAC,CAAC;AAAA,EAAC;AACzGqK,qBAAqB,CAAC1L,UAAU,CAACiL,gBAAgB,CAAC,OAAO,EAAE;EAAA,OAAMS,qBAAqB,CAAClH,aAAa,CAAC,CAAC;AAAA,EAAC,C","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./clientScript.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import config from './config.json';\n\nfunction getTimestamp() {\n  const now = new Date();\n  return `${now.toISOString()} [${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}]`;\n}\n\nconsole.log(getTimestamp(), \"Guidance UI Script loaded\");\n\nclass Response {\n  constructor(data) {\n    this.text = null;\n    this.audioData = null;\n    this.endOfTurn = null;\n\n    if (data.text) {\n      this.text = data.text\n    }\n\n    if (data.audio) {\n      this.audioData = data.audio;\n    }\n  }\n}\n\nfunction handleReceivedImage(renderedImage) {\n  if (!renderedImage) return;\n\n  const imageUrl = `data:image/png;base64,${renderedImage}`;\n  dynamicImage.src = imageUrl;\n\n  // Show the image container\n  imageContainer.style.display = \"block\";\n}\n\n\n// Define the AudioInputHandler class to handle audio input streams\nclass AudioInputHandler {\n  constructor() {\n    this.audioContext = null;\n    this.audioWorkletNode = null;\n    this.pcmData = [];\n    this.interval = null;\n    this.webSocket = null;\n    this.stream = null;\n    this.isRecording = false;\n  }\n\n  async initializeAudioInputStreaming() {\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)({\n        sampleRate: config.input_sample_rate,\n      });\n\n      // Load the AudioWorklet module from the extension\n      const moduleUrl = chrome.runtime.getURL('pcm-input-processor.js');\n      await this.audioContext.audioWorklet.addModule(moduleUrl);\n\n      console.log(getTimestamp(), \"Audio Input Worklet module loaded successfully:\", moduleUrl);\n\n      this.stream = await navigator.mediaDevices.getUserMedia({\n        audio: { channelCount: 1, sampleRate: 16000 },\n      });\n\n      const source = this.audioContext.createMediaStreamSource(this.stream);\n      this.audioWorkletNode = new AudioWorkletNode(this.audioContext, 'pcm-input-processor');\n\n      // Listen for messages from the AudioWorkletProcessor\n      this.audioWorkletNode.port.onmessage = (event) => {\n        const pcm16 = event.data;\n        this.pcmData.push(...pcm16);\n      };\n\n      source.connect(this.audioWorkletNode);\n      console.log(getTimestamp(), \"Initialized Audio Input Streaming\");\n      return { success: true };\n\n    } catch (error) {\n      console.error(getTimestamp(), \"Error Initializing Audio Input Streaming.\", error);\n      return { success: false, error };\n    }\n  }\n\n\n\n\n  // Convert PCM data to base64 and send using the callback\n  async startRecording() {\n\n    if (this.isRecording) return;  // Prevent overlapping calls\n    try {\n\n      // console.log(getTimestamp(), \"Starting conversion of PCM Data to base64\")\n      this.isRecording = true;\n      /* \n      this.pcmData contains audio samples (numbers) in a raw format. \n      To send this data as Base64, we first need to pack it into a binary buffer.\n      PCM audio data is typically represented as 16-bit signed integers (Int16). \n      Since each Int16 takes 2 bytes, we need this.pcmData.length * 2 bytes of memory. \n      */\n      const buffer = new ArrayBuffer(this.pcmData.length * 2);\n\n      /* \n      A DataView object is created to interact with the binary data in the ArrayBuffer.\n      DataView provides methods to read and write specific data types (like 16-bit integers) \n      at specified byte offsets in the buffer.\n      */\n      const view = new DataView(buffer);\n\n\n      /*\n      Each sample in this.pcmData (a 16-bit integer) is written into the ArrayBuffer using the setInt16 method of DataView.\n      index * 2: This calculates the byte offset for each sample because each sample takes 2 bytes.\n      value: This is the PCM value being written.\n      true: This specifies little-endian byte order, which is a common format for audio data.\n      */\n\n      this.pcmData.forEach((value, index) => {\n        view.setInt16(index * 2, value, true);\n      });\n\n\n      /*\n      The Uint8Array is used to create a view of the ArrayBuffer as bytes (8-bit unsigned integers).\n      String.fromCharCode.apply(null, ...) is then used to create a string where each byte from the Uint8Array is converted to a character.\n      The btoa function is used to convert that string into a Base64-encoded string.\n      */\n      const b64PCM = btoa(String.fromCharCode.apply(null, new Uint8Array(buffer)));\n      // console.log(getTimestamp(), \"PCM Data converted to base64\")\n\n      return b64PCM;\n    }\n    catch (error) {\n      console.error(getTimestamp(), \"Error during PCM to Base64 conversion\", error);\n      return null;\n    }\n    finally {\n      this.pcmData = [];\n      this.isRecording = false;\n    }\n  }\n\n\n  stopRecording() {\n    console.log(getTimestamp(), \"Stopping audio input recording\");\n    \n    // Stop the media stream tracks\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n      this.stream = null;\n    }\n\n    // Disconnect and clean up audio nodes\n    if (this.audioWorkletNode) {\n      this.audioWorkletNode.disconnect();\n      this.audioWorkletNode = null;\n    }\n\n    // Close the audio context\n    if (this.audioContext) {\n      this.audioContext.close()\n        .then(() => {\n          this.audioContext = null;\n          console.log(getTimestamp(), \"Audio context closed successfully\");\n        })\n        .catch(error => {\n          console.error(getTimestamp(), \"Error closing audio context:\", error);\n        });\n    }\n\n    this.isRecording = false;\n  }\n\n}\n\nclass StreamHandler {\n  constructor() {\n    this.startButton = document.getElementById('startButton');\n    this.stopButton = document.getElementById('stopButton');\n    this.generateGraphButton = document.getElementById('generateGraphButton');\n    this.screenCaptureHandler = null;\n    this.audioOutputHandler = null;\n    this.audioInputHandler = null;\n    this.audioInterval = null;\n    this.URL = \"ws://localhost:8080/ws\";\n    this.isVideoMode = false; \n  }\n\n  async startStreaming() {\n    try {\n        // AUDIO MODE: Initialize audio components\n      this.audioInputHandler = new AudioInputHandler();\n      this.audioOutputHandler = new AudioOutputHandler();\n      \n      // Initialize both input and output audio\n      const audioInInit = await this.audioInputHandler.initializeAudioInputStreaming();\n      const audioOutInit = await this.audioOutputHandler.initializeAudioOutputStreaming();\n      \n      if (!audioInInit.success || !audioOutInit.success) {\n        throw new Error('Audio initialization failed');\n      }\n      \n      await this.connect();\n      this.startAudioStreaming();\n      \n  \n      // Common UI updates\n      document.getElementById('toggleModeButton').disabled = true;\n      this.stopButton.disabled = false;\n      this.startButton.disabled = true;\n  \n    } catch (error) {\n      console.error(getTimestamp(), \"Error during streaming initialization:\", error);\n      // Change this:\n      this.cleanupResources(); \n      // To:\n      this.isVideoMode ? this.cleanupVideoResources() : this.cleanupAudioResources();\n    }\n  }\n  \n\n  startAudioStreaming() {\n    this.audioInterval = setInterval(async () => {\n      try {\n        const b64PCM = await this.audioInputHandler.startRecording();\n        if (b64PCM) {\n          const nextResult = await this.sendMessageToServer(b64PCM);\n        }\n        // Process the result if needed\n      } catch (error) {\n        console.error(getTimestamp(), \"Error during audio streaming:\", error);\n      }\n    }, config.stream_interval);\n\n    console.log(getTimestamp(), \"Audio Interval started:\", this.audioInterval);\n  }\n\n  \n\n  startScreenCapture() {\n    this.captureInterval = window.setInterval(() => {\n      this.screenCaptureHandler.captureImage();\n    }, config.stream_interval);\n\n    console.log(getTimestamp(), \"Capture Interval started:\", this.captureInterval);\n  }\n\n  async handleGenerateGraph() {\n    \n    // Add null check\n    if (!this.screenCaptureHandler) {\n      console.error(\"No screen capture handler initialized\");\n      return;\n    }\n  \n    try {\n      this.generateGraphButton.disabled = true;\n      this.screenCaptureHandler.captureImage();\n      \n      // Add validation\n      if (!this.screenCaptureHandler.currentFrameB64) {\n        throw new Error(\"Failed to capture screen image\");\n      }\n\n      const imageData = this.screenCaptureHandler.currentFrameB64;\n      \n      const response = await fetch(`${config.apiHost}`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({image: imageData})\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      handleReceivedImage(result.renderedImage);\n    } catch (error) {\n      console.error(getTimestamp(), \"Graph generation failed:\", error); \n    } finally {\n      this.generateGraphButton.disabled = false;\n    }\n\n\n  }\n  \n\n  async sendMessageToServer(b64PCM) {\n    if (this.webSocket == null) {\n      console.log(getTimestamp(), \"Websocket not initialized\");\n      return;\n    }\n\n    // Build an array of media chunks (audio is always sent)\n    const mediaChunks = [{\n      mime_type: \"audio/pcm\",\n      data: b64PCM,\n    }];\n\n    // If in video mode and an image was captured, add the video payload.\n    if (this.isVideoMode && this.screenCaptureHandler?.currentFrameB64) {\n      mediaChunks.push({\n        mime_type: \"image/jpeg\",\n        data: this.screenCaptureHandler.currentFrameB64,\n      });\n    }\n    \n\n    const payload = {\n      realtime_input: {\n        media_chunks: mediaChunks,\n      },\n    };\n    this.webSocket.send(JSON.stringify(payload));\n    console.log(getTimestamp(), \"Sent to Server: \");\n  }\n\n\n  async stopStreaming() {\n    console.log(getTimestamp(), \"Stopping Streaming.\");\n  \n    if (this.isVideoMode && this.screenCaptureHandler) {\n    this.screenCaptureHandler.stopRecording();\n    this.screenCaptureHandler = null; \n    }\n \n    if (this.audioInterval) {\n      clearInterval(this.audioInterval);\n      this.audioInterval = null;\n    }\n    \n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = null;\n    }\n\n    this.audioInputHandler?.stopRecording();\n    this.audioOutputHandler?.stopRecording();\n    \n    document.getElementById('toggleModeButton').disabled = false;\n    this.stopButton.disabled = true;\n    this.startButton.disabled = false;\n  }\n  \n\n  async connect() {\n    console.log(getTimestamp(), \"Connecting: \", this.URL);\n\n    this.webSocket = new WebSocket(this.URL);\n\n    this.webSocket.onclose = (event) => {\n      console.log(getTimestamp(), \"Websocket Closed: \", event);\n      if (event.code === 1006) {\n        alert(\"Connection Closed Unexpectedly\");\n      }\n    };\n\n\n    this.webSocket.onerror = (event) => {\n      console.log(getTimestamp(), \"Websocket Error: \", event);\n    };\n\n    this.webSocket.onopen = async (event) => {\n      console.log(getTimestamp(), \"Websocket Open: \", event);\n      await this.sendInitialSetupMessage(); // Now you can await this call\n    };\n\n    this.webSocket.onmessage = async (event) => {\n      await this.receiveMessage(event);  // Handle the async receiveMessage here.\n    };\n\n  }\n\n  async sendInitialSetupMessage() {\n\n    console.log(getTimestamp(), \"Sending setup message\");\n    const setup_client_message = {\n      setup: {\n        generation_config: { response_modalities: [config.generation_config.response_modalities] },\n        tools: config.tools\n      }\n    };\n\n    this.webSocket.send(JSON.stringify(setup_client_message));\n\n  }\n\n  async receiveMessage(event) {\n    const messageData = JSON.parse(event.data);\n    const response = new Response(messageData);\n\n    if (response.audioData) {\n        await this.audioOutputHandler.injestAudioChunkToPlay(response.audioData);\n    }\n    if (response.text) {\n        displayMessage(response.text);\n    }\n\n    // If an image is received, process it\n    if (messageData.renderedImage) {\n        await handleReceivedImage(messageData.renderedImage);\n    }\n}\n\n  \n  \n  \n  cleanupVideoResources() {\n    if (this.screenCaptureHandler) {\n      this.screenCaptureHandler.stopRecording();\n      this.screenCaptureHandler = null;\n    }\n  }\n  \n  cleanupAudioResources() {\n    this.audioInputHandler?.stopRecording();\n    this.audioOutputHandler?.stopRecording();\n  }\n}\n\n// Define the AudioOutputHandler class to handle audio output streams\nclass AudioOutputHandler {\n  constructor() {\n    this.audioContext = null;\n    this.audioWorkletNode = null;\n    this.initialized = false;\n  }\n\n  // Initialize the audio output context and audio worklet\n  async initializeAudioOutputStreaming() {\n    if (this.initialized) return;\n\n    try {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)({\n        sampleRate: config.output_sample_rate,\n      });\n      // Load the AudioWorklet module from the extension\n      const moduleUrl = chrome.runtime.getURL('pcm-output-processor.js');\n      await this.audioContext.audioWorklet.addModule(moduleUrl);\n\n      console.log(getTimestamp(), \"Audio Output Worklet module loaded successfully:\", moduleUrl);\n\n      this.audioWorkletNode = new AudioWorkletNode(this.audioContext, \"pcm-output-processor\");\n      this.audioWorkletNode.connect(this.audioContext.destination);\n      this.initialized = true;\n      console.log(getTimestamp(), \"Initialized Audio Output Streaming\");\n      return { success: true };\n\n    } catch (error) {\n      console.error(getTimestamp(), \"Error Initializing Audio Output Streaming.\", error);\n      return { success: false, error };\n    }\n  }\n\n  stopRecording() {\n    if (this.audioWorkletNode) {\n      this.audioWorkletNode.disconnect();\n    }\n    if (this.audioContext) {\n      this.audioContext.close();\n    }\n  }\n\n  // Convert base64 audio data to ArrayBuffer and play it\n  async injestAudioChunkToPlay(base64AudioChunk) {\n    try {\n      if (this.audioContext.state === \"suspended\") {\n        await this.audioContext.resume();\n      }\n      const arrayBuffer = base64ToArrayBuffer(base64AudioChunk);\n      const float32Data = convertPCM16LEToFloat32(arrayBuffer);\n\n      // console.log(\"Received Float32 audio data:\", float32Data); // Add this log\n      this.audioWorkletNode.port.postMessage(float32Data);\n    } catch (error) {\n      console.error(getTimestamp(), \"Error processing audio chunk:\", error);\n    }\n  }\n}\n\nfunction base64ToArrayBuffer(base64) {\n  // console.log(\"Input Base64 String:\", base64); // Add this log\n  const binaryString = window.atob(base64);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  // console.log(\"Decoded ArrayBuffer:\", bytes); // Add this log\n\n  return bytes.buffer;\n}\n\nfunction convertPCM16LEToFloat32(pcmData) {\n  const inputArray = new Int16Array(pcmData);\n  const float32Array = new Float32Array(inputArray.length);\n  // console.log(\"Input PCM Int16Array:\", inputArray); // Add this log\n\n  for (let i = 0; i < inputArray.length; i++) {\n    float32Array[i] = inputArray[i] / 32768;\n  }\n  // console.log(\"Converted Float32Array:\", float32Array); // Add this log\n\n  return float32Array;\n}\n\nconst uiContainer = document.createElement('div');  \nuiContainer.id = 'screen-capture-ui';  \n// Inject the UI HTML into the container\nuiContainer.innerHTML = `\n  <div class=\"screen-capture-overlay\">\n    <video id=\"videoElement\" autoplay style=\"display:none;\"></video>\n    <canvas id=\"canvasElement\" style=\"display:none;\"></canvas>\n    <div class=\"button-container-gemini\">\n      <button id=\"startButton\" class=\"anirudh-button-class start-btn\">Start Listening</button>\n      <button id=\"toggleModeButton\" class=\"anirudh-button-class mode-btn\">Visualize</button>\n      <button id=\"generateGraphButton\" class=\"anirudh-button-class\" style=\"display: none\">Generate Graph</button>\n      <button id=\"stopButton\" class=\"anirudh-button-class stop-btn\" disabled>Stop Listening</button>\n    </div>\n  </div>\n`;\n{/* <div id=\"chatLog\"></div> */}\n\n// Function to display a message in the chat log\nfunction displayMessage(text) {\n  console.log(\"Display Text is: \", text)\n  try {\n    // Parse the input text as JSON\n    const textJSON = JSON.parse(text);\n    console.log(\"Text JSON is: \", textJSON)\n    \n    // Extract the guide from the JSON response\n    const guide = textJSON[0].response.result;\n\n    // Extract the guide title (text before the first newline)\n    const guideTitle = guide.split(\"\\n\")[0];\n\n    // Create a new paragraph element to display the title\n    const newParagraph = document.createElement(\"p\");\n    // Add the guide title in bold using <strong>\n    newParagraph.innerHTML = `Fetching Guide for: <strong>${guideTitle}</strong>`;\n\n    // Append the title to the chat log\n    const chatLog = document.getElementById(\"chatLog\");\n    chatLog.appendChild(newParagraph);\n\n    // Scroll to the bottom of the chat log\n    chatLog.scrollTop = chatLog.scrollHeight;\n  } catch (error) {\n    console.error(\"Error processing the guide:\", error);\n  }\n}\n\nconst style = document.createElement(\"style\");\nstyle.textContent = `\n  .screen-capture-overlay {\n    border-radius: 8px;\n    }\n    \n  #screen-capture-ui {\n  border: 1px solid rgba(0,0,0,0.1);\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 9999;\n  background-color: rgb(245, 245, 230);\n  padding: 15px;\n  border-radius: 10px;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n  border: 2px solid black;\n  // width: 360px; /* Fixed width */\n  // height: 150px; /* Fixed height */\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 15px; \n}\n  \n.button-container-gemini {\n  display: flex;\n  justify-content: space-between; /* Ensures even spacing */\n  align-items: center; /* Aligns buttons vertically */\n  width: 100%;\n  gap: 12px; /* Ensures spacing between buttons */\n  padding: 12px 0;\n  box-sizing: border-box; /* Ensures padding doesn't increase width */\n}\n\n.anirudh-button-class {\n  all: unset; /* Reset inherited styles */\n  line-height: 1.2;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  font-family: Arial, Helvetica, sans-serif !important;\n  padding: 12px 10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 13px;\n  flex: 1; /* Ensures buttons take equal width */\n  min-width: 100px; /* Maintains uniform button width */\n  max-width: 100px; /* Prevents uneven stretching */\n  height: 38px; /* Ensures all buttons have the same height */\n  white-space: normal !important; /* Prevents text from wrapping */\n  line-height: 1.1; \n  word-break: break-word;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Subtle depth */\n  transition: all 0.2s ease; /* Smooth hover effects */\n}\n\n.anirudh-button-class:not(:disabled) {\n  // background-color: #4CAF50;\n  color: white;\n}\n\n.anirudh-button-class:hover {\n  // background-color: #45a049;\n}\n\n.anirudh-button-class:hover:not(:disabled) {\n  transform: translateY(-1px);\n  box-shadow: 0 3px 6px rgba(0,0,0,0.15);\n}\n  \n.anirudh-button-class:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n  .start-btn {\n  background-color: #4CAF50;\n}\n\n.start-btn:hover {\n  background-color: #45a049;\n}\n\n.stop-btn {\n  background-color: rgba(220, 53, 70, 0.54);\n}\n\n.stop-btn:hover {\n  background-color: #a71d2a;\n}\n\n.mode-btn {\n  background-color: #2196F3;\n  min-height: 40px; \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 2px;\n}\n\n.mode-btn:hover {\n  background-color: #1976D2;\n}\n\n#generateGraphButton {\n  background-color: #9C27B0;  /* Modern purple */\n  color: white;\n  transition: all 0.2s ease;\n}\n\n#generateGraphButton:hover {\n  background-color: #7B1FA2;  /* Deep amethyst */\n}\n\n#generateGraphButton:active {\n  background-color: #6A1B9A;  /* Rich royal purple */\n}\n\n#generateGraphButton:disabled {\n  background-color: #CE93D8;  /* Soft lavender */\n  cursor: not-allowed;\n}\n\n  #chatLog {\n    width: 320px;\n    height: 560px;\n    overflow-y: auto;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    padding: 8px;\n    margin-top: 10px;\n    background-color: #f5f5f5;\n  }\n\n  #chatLog p {\n    margin: 8px 0;\n    padding: 12px;\n    border-radius: 8px;\n    background-color: white;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);\n    color: black;\n  }\n\n  #chatLog p:nth-child(odd) {\n    background-color: #e8eaf6;\n  }\n`;\n\n// Append the style and container to the document\ndocument.head.appendChild(style);\ndocument.body.appendChild(uiContainer);\n\n\n// ----- Dynamic Image Handling Section -----\n\n// Create a dynamic image container (hidden by default)\nconst imageContainer = document.createElement(\"div\");\nimageContainer.id = \"dynamicImageContainer\";\nimageContainer.style.position = \"fixed\";\nimageContainer.style.top = \"50%\";\nimageContainer.style.left = \"50%\";\nimageContainer.style.transform = \"translate(-50%, -50%)\";\nimageContainer.style.backgroundColor = \"rgba(0,0,0,0.8)\";\nimageContainer.style.padding = \"15px\";\nimageContainer.style.borderRadius = \"8px\";\nimageContainer.style.display = \"none\"; // Initially hidden\nimageContainer.style.zIndex = \"10000\";\nimageContainer.style.textAlign = \"center\";\n\n// Create an image element to display received images\nconst dynamicImage = document.createElement(\"img\");\ndynamicImage.id = \"dynamicImage\";\ndynamicImage.style.maxWidth = \"90vw\";\ndynamicImage.style.maxHeight = \"90vh\";\ndynamicImage.style.display = \"block\";\ndynamicImage.style.marginBottom = \"10px\";\n\n// Create a close button for the image viewer\nconst closeButton = document.createElement(\"button\");\ncloseButton.innerText = \"Close\";\ncloseButton.style.padding = \"10px 15px\";\ncloseButton.style.border = \"none\";\ncloseButton.style.backgroundColor = \"#ff4444\";\ncloseButton.style.color = \"white\";\ncloseButton.style.borderRadius = \"5px\";\ncloseButton.style.cursor = \"pointer\";\n\n// Close the image viewer when the button is clicked\ncloseButton.addEventListener(\"click\", () => {\n  imageContainer.style.display = \"none\"; // Hide the container\n});\n\n// Append the image and close button to the container\nimageContainer.appendChild(dynamicImage);\nimageContainer.appendChild(closeButton);\n\n// Append the container to the body (but keep it hidden initially)\ndocument.body.appendChild(imageContainer);\n\n\n\n// Enable dragging for the UI container\nlet isDragging = false;\nlet offsetX, offsetY;\n\n// Event \nuiContainer.addEventListener('mousedown', (event) => {\n  isDragging = true;\n\n  // Get the mouse position relative to the UI container\n  const rect = uiContainer.getBoundingClientRect();\n  offsetX = event.clientX - rect.left;\n  offsetY = event.clientY - rect.top;\n\n  // Change the cursor to move\n  uiContainer.style.cursor = 'move';\n});\n\ndocument.addEventListener('mousemove', (event) => {\n  if (isDragging) {\n    \n    // Prevent text selection while dragging\n    event.preventDefault();\n\n    // Set the new position of the UI container\n    uiContainer.style.left = `${event.clientX - offsetX}px`;\n    uiContainer.style.top = `${event.clientY - offsetY}px`;\n  }\n});\n\ndocument.addEventListener('mouseup', () => {\n  isDragging = false;\n\n  // Reset the cursor\n  uiContainer.style.cursor = 'default';\n});\n\n\n\n// Append the UI container to the body of the page\ndocument.body.appendChild(uiContainer);\n\nconsole.log(getTimestamp(), \"UI container appended\");\n\nconst streamHandlerInstance = new StreamHandler();\n\n\n// Default mode: audio only\nstreamHandlerInstance.isVideoMode = false;\n\nasync function captureImage() {\n  return new Promise((resolve, reject) => {\n    chrome.runtime.sendMessage(\n      { action: \"captureVisibleTab\" },\n      (response) => {\n        if (!response || response.success === false) {\n          console.error(\"Failed to capture screen:\", response?.error || \"Unknown error\");\n          reject(new Error(response?.error || \"Unknown error\"));\n          return;\n        }\n        resolve(response.dataUrl.split(\",\")[1]); // Return base64 image data\n      }\n    );\n  });\n}\n\n\nasync function sendTableAndReceiveImage(capturedImage){\n  const response = await fetch(`${config.apiHost}`, {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({image: capturedImage})\n  });\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return response;\n}\n\n\n\n// After initializing streamHandlerInstance\n streamHandlerInstance.generateGraphButton.addEventListener(\n  'click', \n  async () => {\n    try{\n      // generateButton.innerText = 'Generating graph...'; \n      streamHandlerInstance.generateGraphButton.disabled = true;\n        const capturedImage = await captureImage();\n        \n        if (!capturedImage) {\n          throw new Error(\"Failed to capture screen image\");\n        }\n\n        const response = await sendTableAndReceiveImage(capturedImage)\n        \n        const result = await response.json();\n\n        handleReceivedImage(result.renderedImage);\n\n      } catch (error) {\n        console.error(getTimestamp(), \"Graph generation failed:\", error); \n      } finally {\n        streamHandlerInstance.generateGraphButton.disabled = false;\n        // generateButton.innerText = 'Generate Graph';\n      }\n\n      }\n);\n\nconst toggleModeButton = document.getElementById('toggleModeButton');\n\n\n\ntoggleModeButton.addEventListener('click', () => {\n  streamHandlerInstance.isVideoMode = !streamHandlerInstance.isVideoMode;\n\n  streamHandlerInstance.generateGraphButton.style.display = streamHandlerInstance.isVideoMode ? 'inline-block' : 'none';\n  streamHandlerInstance.startButton.style.display = streamHandlerInstance.isVideoMode ? 'none' : 'inline-block';\n  streamHandlerInstance.stopButton.style.display = streamHandlerInstance.isVideoMode ? 'none' : 'inline-block';\n\n  // screenCaptureHandler = new ScreenCapture();\n\n  toggleModeButton.innerText = streamHandlerInstance.isVideoMode \n    ? 'back' \n    : 'Visualize';\n});\n\n\nstreamHandlerInstance.startButton.addEventListener(\"click\", () => streamHandlerInstance.startStreaming());\nstreamHandlerInstance.stopButton.addEventListener(\"click\", () => streamHandlerInstance.stopStreaming());"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","Array","from","test","isArray","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","_classCallCheck","config","getTimestamp","now","Date","concat","toISOString","getHours","padStart","getMinutes","getSeconds","console","log","Response","data","text","audioData","endOfTurn","audio","handleReceivedImage","renderedImage","imageUrl","dynamicImage","src","imageContainer","style","display","AudioInputHandler","audioContext","audioWorkletNode","pcmData","interval","webSocket","stream","isRecording","_initializeAudioInputStreaming","_callee","_this","moduleUrl","source","_callee$","_context","window","AudioContext","webkitAudioContext","sampleRate","input_sample_rate","chrome","runtime","getURL","audioWorklet","addModule","navigator","mediaDevices","getUserMedia","channelCount","createMediaStreamSource","AudioWorkletNode","port","onmessage","event","_this$pcmData","pcm16","connect","success","t0","error","initializeAudioInputStreaming","_startRecording","_callee2","buffer","view","b64PCM","_callee2$","_context2","ArrayBuffer","DataView","index","setInt16","btoa","fromCharCode","Uint8Array","startRecording","stopRecording","_this2","getTracks","track","disconnect","close","StreamHandler","startButton","document","getElementById","stopButton","generateGraphButton","screenCaptureHandler","audioOutputHandler","audioInputHandler","audioInterval","URL","isVideoMode","_startStreaming","_callee3","audioInInit","audioOutInit","_callee3$","_context3","AudioOutputHandler","initializeAudioOutputStreaming","startAudioStreaming","disabled","cleanupResources","cleanupVideoResources","cleanupAudioResources","startStreaming","_this3","setInterval","_callee4","nextResult","_callee4$","_context4","sendMessageToServer","stream_interval","startScreenCapture","_this4","captureInterval","captureImage","_handleGenerateGraph","_callee5","imageData","response","result","_callee5$","_context5","currentFrameB64","fetch","apiHost","headers","body","JSON","stringify","image","ok","status","json","handleGenerateGraph","_sendMessageToServer","_callee6","_this$screenCaptureHa","mediaChunks","payload","_callee6$","_context6","mime_type","realtime_input","media_chunks","send","_x","_stopStreaming","_callee7","_this$audioInputHandl","_this$audioOutputHand","_callee7$","_context7","clearInterval","stopStreaming","_connect","_callee10","_this5","_callee10$","_context10","WebSocket","onclose","code","alert","onerror","onopen","_ref2","_callee8","_callee8$","_context8","sendInitialSetupMessage","_x2","_ref3","_callee9","_callee9$","_context9","receiveMessage","_x3","_sendInitialSetupMessage","_callee11","setup_client_message","_callee11$","_context11","setup","generation_config","response_modalities","tools","_receiveMessage","_callee12","messageData","_callee12$","_context12","parse","injestAudioChunkToPlay","displayMessage","_x4","_this$audioInputHandl2","_this$audioOutputHand2","initialized","_initializeAudioOutputStreaming","_callee13","_callee13$","_context13","output_sample_rate","destination","_injestAudioChunkToPlay","_callee14","base64AudioChunk","arrayBuffer","float32Data","_callee14$","_context14","state","resume","base64ToArrayBuffer","convertPCM16LEToFloat32","postMessage","_x5","base64","binaryString","atob","bytes","charCodeAt","inputArray","Int16Array","float32Array","Float32Array","uiContainer","createElement","id","innerHTML","textJSON","guide","guideTitle","split","newParagraph","chatLog","appendChild","scrollTop","scrollHeight","textContent","head","position","top","left","transform","backgroundColor","padding","borderRadius","zIndex","textAlign","maxWidth","maxHeight","marginBottom","closeButton","innerText","border","color","cursor","addEventListener","isDragging","offsetX","offsetY","rect","getBoundingClientRect","clientX","clientY","preventDefault","streamHandlerInstance","_captureImage","_callee16","_callee16$","_context16","reject","sendMessage","action","dataUrl","sendTableAndReceiveImage","_x6","_sendTableAndReceiveImage","_callee17","capturedImage","_callee17$","_context17","_callee15","_callee15$","_context15","toggleModeButton"],"sourceRoot":""}